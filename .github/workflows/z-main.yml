# .github/workflows/z-main.yml
name: Main Deployment Pipeline

on:
  push:
    branches: [main]

# Define project-specific variables here for easy modification
env:
  PROJECT_YEAR: "2025" # Year identifier for the project

  # Container naming convention
  PROJECT_PREFIX: "payloadcms" # Project identifier

  # Directory names (can be updated if needed for future projects)
  DB_DIR: payloadcms-postgres-db-portfolio2025 # Directory for PostgreSQL files
  CMS_DIR: payloadcms-cms-fe-portfolio2025 # Directory for PayloadCMS files

permissions:
  contents: read
  actions: write # Grant permissions for artifact operations

jobs:
  # Set calculated variables first
  # Updated set-variables job
  set-variables:
    runs-on: ubuntu-latest
    outputs:
      project_year: "2025"
      project_prefix: "payloadcms"
      db_dir: "payloadcms-postgres-db-portfolio2025"
      cms_dir: "payloadcms-cms-fe-portfolio2025"
      image_name: ${{ steps.set-vars.outputs.image_name }}
      db_container_name: ${{ steps.set-vars.outputs.db_container_name }}
      cms_container_name: ${{ steps.set-vars.outputs.cms_container_name }}
      network_name: ${{ steps.set-vars.outputs.network_name }}
    steps:
      - id: set-vars
        run: |
          echo "image_name=payloadcms-cms-fe-portfolio-prod" >> $GITHUB_OUTPUT
          echo "db_container_name=payloadcms-postgres-db-portfolio-prod" >> $GITHUB_OUTPUT
          echo "cms_container_name=payloadcms-cms-fe-portfolio-prod" >> $GITHUB_OUTPUT
          echo "network_name=payloadcms-dockernet-prod" >> $GITHUB_OUTPUT

  # First, check database status/initialize if needed
  database:
    needs: set-variables
    uses: ./.github/workflows/a-db-init.yml
    with:
      environment: production
      github_username: ${{ github.repository_owner }}
      repo_name: ${{ github.event.repository.name }}
      project_year: ${{ needs.set-variables.outputs.project_year }}
      project_prefix: ${{ needs.set-variables.outputs.project_prefix }}
      db_dir: ${{ needs.set-variables.outputs.db_dir }}
      db_container_name: ${{ needs.set-variables.outputs.db_container_name }}
      network_name: ${{ needs.set-variables.outputs.network_name }}
    permissions:
      contents: read
    secrets:
      LINUX_SSH_PRIVATE_KEY: ${{ secrets.LINUX_SSH_PRIVATE_KEY }}
      LINUX_CICDGHA_USERNAME: ${{ secrets.LINUX_CICDGHA_USERNAME }}
      LINUX_SERVER_IP: ${{ secrets.LINUX_SERVER_IP }}
      POSTGRES__SECRET_ENV_FILE: ${{ secrets.POSTGRES__SECRET_ENV_FILE }}

  # Deploy PayloadCMS (which includes frontend) - depends on DB being ready
  cms:
    needs: [set-variables, database]
    uses: ./.github/workflows/b-cms-check-deploy.yml
    with:
      environment: production
      github_username: ${{ github.repository_owner }}
      repo_name: ${{ github.event.repository.name }}
      project_year: ${{ needs.set-variables.outputs.project_year }}
      project_prefix: ${{ needs.set-variables.outputs.project_prefix }}
      cms_dir: ${{ needs.set-variables.outputs.cms_dir }}
      image_name: ${{ needs.set-variables.outputs.image_name }}
      cms_container_name: ${{ needs.set-variables.outputs.cms_container_name }}
      db_container_name: ${{ needs.set-variables.outputs.db_container_name }}
      network_name: ${{ needs.set-variables.outputs.network_name }}
    permissions:
      contents: read
      actions: write
    secrets:
      LINUX_SSH_PRIVATE_KEY: ${{ secrets.LINUX_SSH_PRIVATE_KEY }}
      LINUX_CICDGHA_USERNAME: ${{ secrets.LINUX_CICDGHA_USERNAME }}
      LINUX_SERVER_IP: ${{ secrets.LINUX_SERVER_IP }}
      GHPAT__CICDUSER__REPO_WORKFLOW_WRDPACKAGES: ${{ secrets.GHPAT__032725_REPO_WORKFLOW_WRDPACKAGES }}
      PAYLOAD__SECRET_ENV_FILE: ${{ secrets.PAYLOAD__SECRET_ENV_FILE }}

  # Create a comprehensive deployment summary
  deployment-summary:
    needs: [set-variables, database, cms]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read # Only needs read permissions for artifacts
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Get full history for commit information

      # Download deployment marker to include in the summary
      - name: Download CMS deployment marker
        id: download-cms-marker
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: cms-last-deployed-commit
          path: ./deployment-markers/cms

      - name: Create Enhanced Deployment Summary
        run: |
          # ...other code...

          # Get CMS last deployed commit info if available
          if [ -f "./deployment-markers/cms/last-cms-commit.txt" ]; then
            # ...other code...
            CMS_CHANGES_COUNT=$(git diff --name-only $CMS_LAST_COMMIT $CURRENT_COMMIT -- ./${{ needs.set-variables.outputs.cms_dir }} | wc -l)
            # ...other code...

          # ...other code...
          echo "| **Project Prefix** | ${{ needs.set-variables.outputs.project_prefix }} |" >> $GITHUB_STEP_SUMMARY

          # ...rest of the code using needs.set-variables.outputs instead of env...

          # When falling back in the last section:
          if [ -f "./deployment-markers/cms/last-cms-commit.txt" ]; then
            git diff --name-only $CMS_LAST_COMMIT $CURRENT_COMMIT -- ./${{ needs.set-variables.outputs.cms_dir }} >> $GITHUB_STEP_SUMMARY
          fi
