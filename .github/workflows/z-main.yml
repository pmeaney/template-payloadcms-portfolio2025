# .github/workflows/main.yml
name: Main Deployment Pipeline

on:
  push:
    branches: [main]

permissions:
  contents: read
  actions: write # Grant permissions for artifact operations

jobs:
  # First, check database status/initialize if needed
  database:
    uses: ./.github/workflows/a-db-init.yml
    with:
      environment: production
    permissions:
      contents: read
    secrets:
      LINUX_SSH_PRIVATE_KEY: ${{ secrets.LINUX_SSH_PRIVATE_KEY }}
      LINUX_USER_CICD: ${{ secrets.LINUX_CICDGHA_USERNAME }}
      LINUX_SERVER_IP: ${{ secrets.LINUX_SERVER_IP }}
      POSTGRES__SECRET_ENV_FILE: ${{ secrets.POSTGRES__SECRET_ENV_FILE }}

  # Deploy cms-fe if needed
  cms-fe:
    needs: database
    uses: ./.github/workflows/b-cms-fe-check-deploy.yml
    with:
      environment: production
    permissions:
      contents: read
      actions: write # Explicitly grant artifact permissions
    secrets:
      LINUX_SSH_PRIVATE_KEY: ${{ secrets.LINUX_SSH_PRIVATE_KEY }}
      LINUX_USER_CICD: ${{ secrets.LINUX_CICDGHA_USERNAME }}
      LINUX_SERVER_IP: ${{ secrets.LINUX_SERVER_IP }}
      GHPAT__CICD_REPO_WORKFLOW_WRDPACKAGES: ${{ secrets.GHPAT__032725_REPO_WORKFLOW_WRDPACKAGES }}
      PAYLOAD__SECRET_ENV_FILE: ${{ secrets.PAYLOAD__SECRET_ENV_FILE }}

  # Create a comprehensive deployment summary with enhanced tracking information
  deployment-summary:
    needs: [database, cms-fe]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read # Only needs read permissions for artifacts
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Get full history for commit information

      - name: Download CMS-FE deployment marker
        id: download-cms-fe-marker
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: cms-fe-last-deployed-commit
          path: ./deployment-markers

      - name: Create Enhanced Deployment Summary
        run: |
          # Collect information about the current and last deployed commits
          CURRENT_COMMIT=$(git rev-parse HEAD)
          CURRENT_COMMIT_SHORT=$(git rev-parse --short HEAD)
          CURRENT_COMMIT_DATE=$(git show -s --format=%ci $CURRENT_COMMIT)
          CURRENT_COMMIT_MESSAGE=$(git show -s --format=%s $CURRENT_COMMIT)

          # Get cms-fe last deployed commit info if available
          if [ -f "./deployment-markers/last-cms-fe-commit.txt" ]; then
            CMS_FE_LAST_COMMIT=$(cat ./deployment-markers/last-cms-fe-commit.txt)
            CMS_FE_LAST_COMMIT_SHORT=$(git rev-parse --short $CMS_FE_LAST_COMMIT)
            CMS_FE_LAST_COMMIT_DATE=$(git show -s --format=%ci $CMS_FE_LAST_COMMIT)
            CMS_FE_CHANGES_COUNT=$(git diff --name-only $CMS_FE_LAST_COMMIT $CURRENT_COMMIT -- ./payloadcms-cms-fe-portfolio2025 | wc -l)
            CMS_FE_DEPLOYED_NOW="${{ needs.cms-fe.outputs.had_changes }}"
          else
            CMS_FE_LAST_COMMIT="No previous deployment"
            CMS_FE_LAST_COMMIT_SHORT="N/A"
            CMS_FE_LAST_COMMIT_DATE="N/A"
            CMS_FE_CHANGES_COUNT="N/A (first deployment)"
            CMS_FE_DEPLOYED_NOW="${{ needs.cms-fe.outputs.had_changes }}"
          fi

          # Create the deployment summary
          echo "# 📊 Deployment Summary for Commit ${CURRENT_COMMIT_SHORT}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🔄 Current Workflow Information" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| ------ | ----- |" >> $GITHUB_STEP_SUMMARY
          echo "| **Commit** | \`${CURRENT_COMMIT_SHORT}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Date** | ${CURRENT_COMMIT_DATE} |" >> $GITHUB_STEP_SUMMARY
          echo "| **Message** | ${CURRENT_COMMIT_MESSAGE} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Database section
          echo "## 💾 Database" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.database.outputs.needs_depl__db }}" == "true" ]]; then
            echo "✅ **Action taken**: Database container was newly created" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ **Action taken**: Database container already existed, no action needed" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY

          # cms-fe deployment section with enhanced tracking
          echo "## 🌐 cms-fe (PayloadCMS)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| ------ | ----- |" >> $GITHUB_STEP_SUMMARY
          echo "| **Last deployed commit** | \`${CMS_FE_LAST_COMMIT_SHORT}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Last deployment date** | ${CMS_FE_LAST_COMMIT_DATE} |" >> $GITHUB_STEP_SUMMARY
          echo "| **Changes detected** | ${CMS_FE_DEPLOYED_NOW} |" >> $GITHUB_STEP_SUMMARY

          # Use fallback count if the output count is missing
          if [[ "${{ needs.cms-fe.outputs.had_changes }}" == "true" && -n "${{ needs.cms-fe.outputs.changed_files_count }}" ]]; then
            echo "| **Number of changes** | ${{ needs.cms-fe.outputs.changed_files_count }} files |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| **Number of changes** | ${CMS_FE_CHANGES_COUNT} files |" >> $GITHUB_STEP_SUMMARY
          fi

          echo "| **Action taken** | ${{ needs.cms-fe.outputs.action_taken }} |" >> $GITHUB_STEP_SUMMARY

          # If changes were detected, show what changed using the output from cms-fe workflow
          if [[ "${{ needs.cms-fe.outputs.had_changes }}" == "true" ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📝 cms-fe Changes" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            if [[ -n "${{ needs.cms-fe.outputs.changed_files }}" ]]; then
              echo "${{ needs.cms-fe.outputs.changed_files }}" >> $GITHUB_STEP_SUMMARY
            else
              # Fallback method if output is not available
              if [ -f "./deployment-markers/last-cms-fe-commit.txt" ]; then
                git diff --name-only $CMS_FE_LAST_COMMIT $CURRENT_COMMIT -- ./payloadcms-cms-fe-portfolio2025 >> $GITHUB_STEP_SUMMARY
              else
                echo "First deployment - all files are new" >> $GITHUB_STEP_SUMMARY
              fi
            fi
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi
